@startuml
autonumber
participant "User Agent" as u
participant "Wallet Frontend" as w
participant "Wallet Backend" as b
participant "Credential Issuer" as i

w -> i: get metadata
i -> w: credential types, key requirements, endpoints
w --> u : authorize (credential_type, client_id, ...)
u --> i: authorize (credential_type, client_id, ...)
... 
note over u, i: user authenticatation/identification + consent
i --> u : authorize response (code)
u --> w: authorize response (code)
w --> b: get nonce
w -> w : obtain app attestation (nonce)
w -> b : get assertion for code exchange(hash_code, app attestation)
b -> b : check app_attestation
b -> b : generate assertion (iss=wallet backend, hash_code, client_id)
b -> w : assertion
w -> i : token (code, client_id, assertion)
note over w, i: wallet authenticates with assertion as OAuth Client and validates hash of authorization code with actual code\ncredential issuer checks assertion issuer (wallet provider) with trust registry
i -> w : access_token, c_nonce
w -> w : gen key : key, key_attestation
w -> w : create proof of posssion (c_nonce)
w -> i : issue credential (access_token, credential_type, format, proof, key_policy)
i -> w : credential
@enduml