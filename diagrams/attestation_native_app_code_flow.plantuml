@startuml
participant "User Agent" as u
participant Verifier as v
participant "Wallet Frontend" as w
participant "Wallet Backend" as b
participant Issuer as i

u --> v : do something
v --> u : request credential presentation
u --> w : request credential presentation
w -> w : credential not present
w -> w : determine issuer
w -> b : start credential issuance (issuer, credential_type)
w -> i: get metadata (credential types, key requirements, endpoints)
b -> w : authz url, nonce
w --> i : authorize
i --> u : login/identify/get consent
u --> i : login/identify/give consent
i --> w : authorize response (code)
w -> w : obtain app attestation (nonce)
w -> b : exchange code (code, app attestation)
b -> b : check app_attestation
b -> i : token (pre-authz-code, pin, client_id, ...)
note left: wallet authenticates with issuer as OAuth Client (public key based)\nissuer may check wallet against trust registry
i -> b : access_token, c_nonce
b -> b : generate tx_token for access_token
b -> w: tx_token, c_nonce
w -> w : gen key : key, key_attestation
w -> w : create proof of posssion (c_nonce)
w -> b : request credential (tx_token, credential_type, format, proof, key_attestation)
b -> b : map tx_token to access_token
b -> b : check key_attestation
b -> i : issue credential (access_token, credential_type, format, proof, key_policy)
i -> b : credential
b -> w : credential
@enduml